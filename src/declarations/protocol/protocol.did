type SharedPosition = record {};
type Result = 
 variant {
   err: ProtocolError;
   ok;
 };
type ProtocolError = variant {transferFromError;};
service : {
  closePosition: (nat) -> (Result);
  createPosition: (nat, nat) -> (Result);
  getCollateralPrice: () -> (nat) query;
  getLastPositionId: () -> (nat) query;
  getPosition: (nat) -> (opt SharedPosition) query;
  getPositions: (nat, nat) -> (vec SharedPosition) query;
  getTokenPrincipal: () -> (principal) query;
  init: (text, text) -> ();
  liquidatePosition: (nat) -> (Result);
  setCollateralPrice: (nat) -> ();
  updatePosition: (nat, nat, nat) -> (Result);
}
